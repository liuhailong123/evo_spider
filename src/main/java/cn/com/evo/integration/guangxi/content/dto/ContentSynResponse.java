package cn.com.evo.integration.guangxi.content.dto;import com.alibaba.fastjson.JSONArray;import com.alibaba.fastjson.annotation.JSONField;import lombok.Data;import lombok.EqualsAndHashCode;import java.util.List;/** * @Description: * @author: lu.xin * @create: 2019-05-24 1:56 PM **/@Data@EqualsAndHashCode(callSuper = false)public class ContentSynResponse {    /**     * 消息id     */    @JSONField(name = "msg_id")    private String msgId;    /**     * 媒资类型     * vod:主媒资     * index:分集     * media:片源     */    private String type;    /**     * 0表示审核     * 1表示上下线     * 2表示注入（修改+新增）结果     * 3表示注入（删除）结果     */    @JSONField(name = "opt_type")    private String optType;    /**     * 媒资注入ID     */    private String id;    /**     * cp id     */    @JSONField(name = "cp_id")    private String cpId;    /**     * opt_type = 0     * 0：通过审核     * 1：取消审核（待审核）     * 3：未通过审核     * opt_type = 1     * 0：上线     * 1：下线     * 2: 处理中     * opt_type = 2     * 0：注入（修改+新增）成功     * 1：注入（修改+新增）失败     * opt_type = 3     * 0：注入（删除）成功     * 1：注入（删除）失败     */    private String status;    /**     * 简介     */    private String summary;    @JSONField(name = "nns_id")    private String nnsId;    /**     * 是否真正同步下线，0表示同步下线操作，1表示不同步下线操作     */    @JSONField(name = "is_sync")    private String isSync;    /**     * 原始id     */    @JSONField(name = "original_id")    private String originalId;    /**     * 主媒资注入ID，分集上下线状态时，需要记录该主媒资注入ID     */    @JSONField(name = "vod_import_id")    private String vodImportId;    /**     * 主媒资原始ID，分集上下线状态时，需要记录该主媒资原始ID     */    @JSONField(name = "vod_original_id")    private String vodOriginalId;    @Override    public String toString() {        return "ContentSynResponse{" +                "msgId='" + msgId + '\'' +                ", type='" + type + '\'' +                ", optType='" + optType + '\'' +                ", id='" + id + '\'' +                ", cpId='" + cpId + '\'' +                ", status='" + status + '\'' +                ", summary='" + summary + '\'' +                ", nnsId='" + nnsId + '\'' +                ", isSync='" + isSync + '\'' +                ", originalId='" + originalId + '\'' +                ", vodImportId='" + vodImportId + '\'' +                ", vodOriginalId='" + vodOriginalId + '\'' +                '}';    }    public static void main(String[] args) {        String str = "[\n" +                "    {\n" +                "        \"msg_id\": \"578eefd32d83bc48f0704e8b91e34d62\",\n" +                "        \"type\": \"vod\",\n" +                "        \"opt_type\": \"1\",\n" +                "        \"id\": \"5c93c893fd3893a935c848d1a40f2634\",\n" +                "        \"cp_id\": \"mgtv\",\n" +                "        \"status\": \"1\",\n" +                "        \"summary\": \"\",\n" +                "        \"nns_id\": \"58e749891f626a43231dc1407d474832\",\n" +                "        \"is_sync\": \"1\",\n" +                "        \"original_id\": \"58e749891f626a43231dc1407d474832\",\n" +                "        \"vod_import_id\": \"\",\n" +                "        \"vod_original_id\": \"\"\n" +                "    },\n" +                "    {\n" +                "        \"msg_id\": \"578eefd32d83bc48f0704e8b91e34d62\",\n" +                "        \"type\": \"vod\",\n" +                "        \"opt_type\": \"1\",\n" +                "        \"id\": \"5c93c893fd3893a935c848d1a40f2634\",\n" +                "        \"cp_id\": \"mgtv\",\n" +                "        \"status\": \"1\",\n" +                "        \"summary\": \"\",\n" +                "        \"nns_id\": \"58e749891f626a43231dc1407d474832\",\n" +                "        \"is_sync\": \"1\",\n" +                "        \"original_id\": \"58e749891f626a43231dc1407d474832\",\n" +                "        \"vod_import_id\": \"\",\n" +                "        \"vod_original_id\": \"\"\n" +                "    }\n" +                "]";        List<ContentSynResponse> contentSynResponses = JSONArray.parseArray(str, ContentSynResponse.class);        for (ContentSynResponse contentSynRespons : contentSynResponses) {            System.out.println(contentSynRespons.toString());        }    }}
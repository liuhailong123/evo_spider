package cn.com.evo.integration.jinanyouxian;import cn.com.evo.admin.manage.domain.entity.Province;import cn.com.evo.cms.domain.entity.cms.Picture;import cn.com.evo.cms.domain.entity.cms.Video;import cn.com.evo.integration.jinanyouxian.sdk.ContentSDK;import cn.com.evo.provincial.service.AbstractProvincialServiceImpl;import org.springframework.beans.BeanUtils;import org.springframework.stereotype.Service;import javax.transaction.Transactional;import java.io.File;import java.util.List;/** * @Description: 济南有线鉴权逻辑 * @author: lu.xin * @create: 2019-04-03 6:04 PM **/@Service@Transactionalpublic class JnyxContentServiceImpl extends AbstractProvincialServiceImpl {    /**     * 济南有线 移动图片至nginx目录     *     * @param picture     */    @Override    public void registImage(Picture picture, Province province, boolean deleteFlag) {        try {            String command = "chmod 777 " + picture.getCloudPath();            Runtime.getRuntime().exec(command).waitFor();            // 获取海报，进行上传            File file = new File(picture.getCloudPath());            if (file.exists()) {                String command2 = "mv " + picture.getCloudPath() + " /www/images/" + picture.getFileName();                Runtime.getRuntime().exec(command2).waitFor();            }        } catch (Exception e) {            throw new RuntimeException("上传资源至Nginx目录异常：" + e.getMessage(), e);        }    }    /**     * 获取播放地址     *     * @param accesstoken     * @param videoId     * @return     */    public String getPlayUrl(String accesstoken, String videoId) {        try {            String playUrl = ContentSDK.getVideoAuthorityInfo(accesstoken, videoId);            return playUrl;        } catch (Exception e) {            throw new RuntimeException("获取播放地址异常" + e.getMessage(), e);        }    }    /**     * 获取播放地址。     * @param accesstoken     * @param temps     * @return     */    @Override    public Video getPlayURL(String accesstoken, List<Video> temps, String appId) {        Video video = new Video();        BeanUtils.copyProperties(temps.get(0), video);        String url = ContentSDK.getVideoAuthorityInfo(accesstoken, video.getUrl());        video.setUrl(url);        return video;    }    @Override    public void registMovie(String contentId, Province province) {        // todo 逻辑未填充    }    @Override    public void updateMovie(String contentId, Province province) {        // todo 逻辑未填充    }    @Override    public void deleteMovie(String contentId, Province province) {        // todo 逻辑未填充    }    @Override    public void registSeries(String contentId, Province province) {        // todo 逻辑未填充    }    @Override    public void updateSeries(String contentId, Province province) {        // todo 逻辑未填充    }    @Override    public void deleteSeries(String contentId, Province province) {        // todo 逻辑未填充    }}
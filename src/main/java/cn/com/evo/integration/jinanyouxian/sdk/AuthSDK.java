package cn.com.evo.integration.jinanyouxian.sdk;import cn.com.evo.cms.utils.HttpUtil;import cn.com.evo.integration.common.ConstantFactory;import cn.com.evo.integration.jinanyouxian.common.ConstantEnum;import cn.com.evo.integration.jinanyouxian.sdk.dto.GetPackageInfoResponse;import cn.com.evo.integration.jinanyouxian.sdk.dto.GetPriceInfoResponse;import com.alibaba.fastjson.JSONObject;import com.frameworks.utils.DateUtil;import org.apache.logging.log4j.LogManager;import org.apache.logging.log4j.Logger;import java.util.Date;/** * @Description: * @author: lu.xin * @create: 2019-04-16 5:08 PM **/public class AuthSDK {    protected static Logger logger = LogManager.getLogger(AuthSDK.class);    /**     * 套餐鉴权     *     * @param accesstoken 用户令牌     * @return boolean ture-鉴权通过， false-鉴权不通过     */    public static boolean auth(String accesstoken) {        try {            String url = ConstantFactory.map.get(ConstantEnum.get_package_url.getKey()) +                    "?accesstoken=" + accesstoken + "&packageid=" + ConstantFactory.map.get(ConstantEnum.package_id.getKey());            String resultStr = HttpUtil.get(url, "调用茁壮接口获取套餐接口");            GetPackageInfoResponse response = JSONObject.parseObject(resultStr, GetPackageInfoResponse.class);            if (response.getRet() == 0) {                GetPackageInfoResponse.ValidDuration validDuration = response.getAvailable_duration();                Long startTime = validDuration.getStart_time();                Long endTime = validDuration.getEnd_time();                if (startTime == 0L && endTime == 0L) {                    // 局方接口逻辑，一致有效                    return true;                } else {                    boolean startTimeflag = DateUtil.compareTime(DateUtil.format(new Date(startTime), DateUtil.DATE_PATTERN.YYYY_MM_DD_HH_MM_SS));                    boolean endTimeflag = DateUtil.compareTime(DateUtil.format(new Date(endTime), DateUtil.DATE_PATTERN.YYYY_MM_DD_HH_MM_SS));                    if (startTimeflag && !endTimeflag) {                        return true;                    } else {                        return false;                    }                }            } else {                return false;            }        } catch (Exception e) {            throw new RuntimeException("调用茁壮接口获取套餐接口异常：" + e.getMessage(), e);        }    }    /**     * 节目鉴权     *     * @param accesstoken 用户令牌     * @param videoId     视频id     * @return boolean ture-鉴权通过， false-鉴权不通过     */    public static boolean vdieoAuth(String accesstoken, String videoId) {        try {            String url = ConstantFactory.map.get(ConstantEnum.get_price_url.getKey()) + "?accesstoken=" +                    accesstoken + "&programid=" + videoId + "&programtype=2";            String resultStr = HttpUtil.get(url, "调用茁壮接口获取节目价格接口");            GetPriceInfoResponse response = JSONObject.parseObject(resultStr, GetPriceInfoResponse.class);            boolean flag = false;            if (response.getRet() == 0) {                if (response.getIs_purchased() == 1) {                    flag = true;                } else {                    flag = false;                }            } else {                flag = false;            }            return flag;        } catch (Exception e) {            throw new RuntimeException("调用茁壮接口获取节目价格接口异常：" + e.getMessage(), e);        }    }}
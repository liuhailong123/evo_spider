package cn.com.evo.integration.common.utils;import org.apache.commons.fileupload.FileItem;import org.apache.commons.fileupload.FileItemFactory;import org.apache.commons.fileupload.disk.DiskFileItemFactory;import org.springframework.web.multipart.MultipartFile;import org.springframework.web.multipart.commons.CommonsMultipartFile;import java.io.File;import java.io.FileInputStream;import java.io.IOException;import java.io.OutputStream;/** * @Description: * @author: lu.xin * @create: 2019-05-14 11:00 AM **/public class FileToMulFile {    /**     * 获取MulFile     *     * @param filePath 文件本地路径     * @param fileName 文件名     * @return     */    public static MultipartFile getMulFileByPath(String filePath, String fileName) {        FileItem fileItem = createFileItem(filePath, fileName);        MultipartFile mfile = new CommonsMultipartFile(fileItem);        return mfile;    }    private static FileItem createFileItem(String filePath, String fileName) {        FileItemFactory factory = new DiskFileItemFactory(16, null);        String textFieldName = "textField";        FileItem item = factory.createItem(textFieldName, "text/plain", true,                fileName);        File newfile = new File(filePath);        int bytesRead = 0;        byte[] buffer = new byte[8192];        try {            FileInputStream fis = new FileInputStream(newfile);            OutputStream os = item.getOutputStream();            while ((bytesRead = fis.read(buffer, 0, 8192))                    != -1) {                os.write(buffer, 0, bytesRead);            }            os.close();            fis.close();        } catch (IOException e) {            throw new RuntimeException("获取本地文件流对象异常：" + e.getMessage(), e);        }        return item;    }}
package cn.com.evo.integration.guangxi.pay.dto.bind;import cn.com.evo.integration.common.ConstantFactory;import cn.com.evo.integration.guangxi.common.ConstantEnum;import com.alibaba.fastjson.JSONArray;import com.frameworks.utils.AESUtils;import lombok.Data;import lombok.EqualsAndHashCode;import java.io.UnsupportedEncodingException;import java.net.URLEncoder;import java.util.List;/** * @Description: * @author: lu.xin * @create: 2019-05-15 3:36 PM **/@Data@EqualsAndHashCode(callSuper = false)public class BindQueryProductRequest extends BindRequest {    private static final String FUNC = "get_product_list_by_video_id";    private List<String> content;    /**     * 初始化     *     * @param nns_content     */    public BindQueryProductRequest(List<String> nns_content) {        super.setFunc(FUNC);        this.content = nns_content;        try {            String str = ConstantFactory.map.get(ConstantEnum.auth_key.getKey()) + "$$" + super.getCpId() + "$$" +                    JSONArray.toJSONString(this.content) + "$$" + super.getTimestamp();            super.setAuth(AESUtils.aesEncrypt(str, ConstantFactory.map.get(ConstantEnum.auth_key.getKey())));        } catch (Exception e) {            throw new RuntimeException("计算AES签名异常" + e.getMessage(), e);        }    }    /**     * 转换为请求参数     *     * @return     */    public String toParams() throws UnsupportedEncodingException {        String params = "nns_func=" + super.getFunc() + "&nns_cp_id=" + super.getCpId() +                "&nns_auth=" + super.getAuth() + "&nns_timestamp=" + super.getTimestamp() +                "&nns_video_id_type=" + super.getVideoIdType() + "&nns_content=" + URLEncoder.encode(JSONArray.toJSONString(this.content), "utf8");        return params;    }}
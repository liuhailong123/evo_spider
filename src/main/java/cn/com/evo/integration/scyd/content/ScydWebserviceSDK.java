package cn.com.evo.integration.scyd.content;import cn.com.evo.integration.common.ConstantFactory;import cn.com.evo.integration.scyd.common.ConstantEnum;import cn.com.evo.integration.scyd.content.webservice.lsp.CSPRequestService;import cn.com.evo.integration.scyd.content.webservice.lsp.CSPRequestServiceLocator;import cn.com.evo.integration.scyd.content.webservice.lsp.CSPResult;import cn.com.evo.integration.scyd.content.webservice.lsp.CtmsSoapBindingStub;import cn.com.evo.integration.scyd.content.webservice.notify.CSPResponseService;import cn.com.evo.integration.scyd.content.webservice.notify.CSPResponseServiceLocator;import cn.com.evo.integration.scyd.content.webservice.notify.CSPResponseSoapBindingStub;import org.apache.logging.log4j.LogManager;import org.apache.logging.log4j.Logger;/** * @Description: 四川移动 webservice调用类 * @author: lu.xin * @create: 2019-04-11 11:32 AM **/public class ScydWebserviceSDK {    protected static Logger logger = LogManager.getLogger(ScydWebserviceSDK.class);    /**     * 调用局方webservice接口，通知局方获取内容注入xml     *     * @param correlateId 相关性标识 相关性标识，用于关联指令执行请求消息和结果通知消息。     *                    对于重发的指令，该字段值保持一致，对于不同的指令，规则：CSPID+不重复6位不重复数组成     *                    如果该字段为null，则会重新创建     * @param cmdFileURL  xml 文件ftp地址 ftp格式ftp://<user>:<password>@<host>:<port>/<url-path>     *                    例: ftp://chenc:chenc@192.168.1.4:21/home/chenc/addSeries.xml     *                    ftp://evo_ftp:Evomedia-ftp@112.18.251.71:8091/ftp/pub/config.js     * @return true 调用成功；false 调用失败     */    public static void callCTMS(String correlateId, String cmdFileURL) {        try {            CSPRequestService service = new CSPRequestServiceLocator();            CtmsSoapBindingStub binding = (CtmsSoapBindingStub) service.getctms();            logger.error("CSP_ID:" + ConstantFactory.map.get(ConstantEnum.csp_id.getKey()));            logger.error("LSP_ID:" + ConstantFactory.map.get(ConstantEnum.lsp_id.getKey()));            logger.error("correlateId:" + correlateId);            logger.error("fileURL:" + cmdFileURL);            CSPResult result = binding.execCmd(ConstantFactory.map.get(ConstantEnum.csp_id.getKey()),                    ConstantFactory.map.get(ConstantEnum.lsp_id.getKey()), correlateId, cmdFileURL);            logger.error("result:" + result.getResult());            logger.error("msg:" + result.getErrorDescription());            if (result.getResult() == 0) {                // 通知成功            } else {                throw new RuntimeException("调用局方webservice接口，通知局方获取内容注入xml错误，result:" + result.getResult() + "|errorMsg：" + result.getErrorDescription());            }        } catch (Exception e) {            throw new RuntimeException("调用局方webservice接口，通知局方获取内容注入xml，异常" + e.getMessage(), e);        }    }    public static void synNotify() {        try {            CSPResponseService service = new CSPResponseServiceLocator();            CSPResponseSoapBindingStub binding = (CSPResponseSoapBindingStub) service.getCSPResponse();            cn.com.evo.integration.scyd.content.webservice.notify.CSPResult cSPResult = binding.resultNotify("test1", "test2", "test3", -1, "ftp://adfadsf/asdfasdf/asdfasdf.asdfasdf.xml");        } catch (Exception e) {            e.printStackTrace();            throw new RuntimeException("调用局方webservice接口，通知局方获取内容注入xml，异常" + e.getMessage(), e);        }    }    public static void main(String[] args) {        synNotify();    }}